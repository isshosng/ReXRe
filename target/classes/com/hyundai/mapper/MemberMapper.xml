<?xml version="1.0" encoding="UTF-8"?>
<!-- /*********************************
 * @function : MemberMapper 관련 xml
 * @author : Ilwoo Jo
 * @Date : Dec 31. 2022.
 *********************************/ -->
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http:/mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyundai.mapper.MemberMapper">

<!-- Members 테이블의 컬럼을 MemberVO에 맞게 컬럼명 변경 -->
	<resultMap type="com.hyundai.domain.MemberVO" id="memberMap">
		<id property="useridid" column="member_idid"></id>
		<result property="member_phone" column="member_phone"></result>
		<result property="member_email" column="member_email"></result>
		<result property="member_sex" column="member_sex"></result>
		<result property="member_birthday" column="member_birthday"></result>
		<result property="member_postNum" column="member_postnum"></result>
		<result property="member_address1" column="member_address1"></result>
		<result property="member_address2" column="member_address2"></result>
		<result property="useridid" column="member_idid"></result>
		<result property="userpw" column="member_pw"></result>
		<result property="userName" column="member_name"></result>
		<result property="enabled" column="member_enabled"></result>
		<result property="regDate" column="member_regdate"></result>
		<result property="updateDate" column="member_updatedate"></result>
		<result property="userid" column="member_id"></result>
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap>
	
<!-- Auths 테이블과 Members 테이블의 컬럼을 AuthVO에 맞게 컬럼명 변경 -->
	<resultMap type="com.hyundai.domain.AuthVO" id="authMap">
		<result property="userid" column="member_idid"></result>
		<result property="auth" column="auth_name"></result>
	</resultMap>
	
<!-- allergies 테이블 컬럼을 AllergyVO에 맞게 컬럼면 변경 -->
	<resultMap type="com.hyundai.domain.AllergyVO"
		id="AllergyMap">
		<result property="allergy_id" column="allergy_id"></result>
		<result property="allergy_name" column="allergy_name"></result>
	</resultMap>
	
<!-- 회원과 해당 회원의 권한 불러오기 -->
	<select id="read" resultMap="memberMap">
		select
		mem.member_idid,member_id,member_phone, member_email,
		member_postnum,member_address1,member_address2,
		member_pw,
		member_name,
		member_enabled, member_regdate,
		member_updatedate,
		auth_name,
		member_birthday,
		member_sex
		from members mem, (select * from membergrade, auth where
		auth_auth_id = auth_id)
		where mem.member_id = members_member_id and
		mem.member_idid = #{userid}
		and member_enabled = 1
		
	</select>
	
<!-- 아이디 중복 체크 -->	
	<select id="IDCheck" parameterType="String" resultType="int">
		select
		count(member_idid) from members where member_idid = #{member_idid}
	</select>

<!-- 알러지 성분 검색 -->	
	<select id="allergySearch" parameterType="String"
		resultType="com.hyundai.domain.AllergyVO"> 
      <![CDATA[select allergy_id, allergy_name from allergies where (allergy_name 
      like '%'||#{allergy}||'%' or allergy_alter like '%'||#{allergy}||'%') and allergy_id >0 and 
      rownum < 6]]>
	</select>
	
<!-- 알러지 성분 추가 -->
	<insert id="addal" parameterType="String">
		insert into allergies values
		(cusallergy_seq.nextval,#{allergy},'')
	</insert>
	
<!-- 회원가입 -->	
	<insert id="joinUser"
		parameterType="com.hyundai.domain.MemberVO">
		insert into members
		(member_id,member_idid,member_pw,member_name,member_birthday,member_sex,
		member_phone,member_email,member_postNum,member_address1,member_address2)
		values
		(memberid_seq.nextval,#{useridid},#{userpw},#{userName},#{member_birthday},
		#{member_sex},#{member_phone},#{member_email},#{member_postNum},#{member_address1},#{member_address2})
	</insert>
	
<!-- 회원가입 후 권한 부여-->	
	<insert id="joinUserAuth"
		parameterType="String">
		insert into membergrade values (1, (select member_id from members where member_idid = #{member_idid}))
	</insert>

	
<!-- 아이디 찾기 -->
	<select id="findID"
		 resultType="String">
		select
		member_idid from members where member_name = #{name } and
		member_email = #{email}
	</select>
	
<!-- 비밀번호 찾기 -->
		<select id="findPW"
		 resultType="String">
		select
		member_idid from members where member_name = #{name } and
		member_email = #{email} and member_idid = #{id}
	</select>
	
<!-- 비밀번호 변경 -->	
	<update id="pwChange">
		UPDATE members SET member_pw = #{pw} WHERE
		member_idid = #{id}
	</update>

<!-- 회원 아이디로 회원 번호 찾기 -->
	<select id="idid" resultType="Integer">
		select member_id from members where
		member_idid = #{member_idid}
	</select>
	

<!-- 비밀번호 확인 -->	
	<select id="PWCheck" resultType="String">
		select member_pw from members where member_idid = #{name}
	</select>
	
<!-- 회원정보 수정 -->
	<update id="updateUser"
		parameterType="com.hyundai.domain.MemberVO">
		update members set
		member_pw = #{userpw}, member_birthday = #{member_birthday},member_sex =
		#{member_sex}, member_phone =#{member_phone} ,
		member_email = #{member_email}, member_postNum = #{member_postNum},
		member_address1 = #{member_address1}, member_address2 =
		#{member_address2}
		where member_idid = #{useridid}
	</update>
<!-- 회원의 알러지 성분 가져오기 -->
	<select id="findMemAl" resultType="String">
		select allergy_name from AllergyMappers, allergies where allergy_id = allergies_allergy_id and
		members_member_id = (select member_id from members where member_idid = #{member_idid})
	</select>
	
<!-- 특정 회원의 알러지 성분 제거 -->
	<delete id="deleteMemAl"
		parameterType="com.hyundai.domain.AllergyMapperVO">
		delete from allergymappers
		where (select allergy_id from allergies where allergy_name =
		#{allergy_name}) = allergies_allergy_id and (select member_id
		from members where member_idid =
		#{member_idid}) = members_member_id
	</delete>
		
<!-- 특정 회원의 알러지 성분 추가 -->
	<insert id="addMemAl"
		parameterType="com.hyundai.domain.AllergyMapperVO">
		insert into allergymappers
		values ((select allergy_id
		from allergies where allergy_name =
		#{allergy_name}),(select member_id
		from members where member_idid =
		#{member_idid}))
	</insert>
	
<!-- 회원 탈퇴(회원 enabled 컬럼 0으로 변경) -->
	<update id="out">
		update members set member_enabled = 0, member_pw = 0, member_phone = 'memberout',
		member_sex = 0, member_email = 'memberout', member_address1 = 'memberout', member_address2 = 'memberout',
		member_postnum = 0, member_birthday = sysdate where member_idid = #{name}
	</update>

</mapper>